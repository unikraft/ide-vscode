{
  "name": "unikraft-ide-vscode",
  "displayName": "Unikraft VSCode Extension",
  "description": "Seamlessly build and manage Unikraft components from within VSCode!",
  "version": "0.2.0",
  "publisher": "unikraft",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/unikraft/ide-vscode.git"
  },
  "homepage": "https://github.com/unikraft/ide-vscode/main/README.md",
  "engines": {
    "vscode": "^1.75.0"
  },
  "keywords": [
    "unikraft",
    "unikernel"
  ],
  "categories": [
    "Other"
  ],
  "icon": "media/unikraft-logo.png",
  "galleryBanner": {
    "color": "#0E2F5F",
    "theme": "dark"
  },
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Unikraft",
      "properties": {
        "unikraft": {
          "sources": {
            "type": "string",
            "default": "",
            "description": "Specifies the directory where all the packages are stored, By default it is set by environment variable KRAFTKIT_PATHS_SOURCES or file `$HOME/.config/kraftkit/config.yaml`."
          },
          "manifests": {
            "type": "string",
            "default": "",
            "description": "Specifies the directory where all the manifests are stored, By default it is set by environment variable KRAFTKIT_PATHS_MANIFESTS or file `$HOME/.config/kraftkit/config.yaml`."
          },
          "run": {
            "detach": {
              "type": "boolean",
              "default": false,
              "description": "Whether to run the unikernel in background"
            },
            "disableAcceleration": {
              "type": "boolean",
              "default": false,
              "description": "Whether to disable acceleration of CPU (usually enables TCG)"
            },
            "initrd": {
              "type": "string",
              "default": "",
              "description": "Whether to run specified initrd unikernel"
            },
            "ip": {
              "type": "string",
              "default": "",
              "description": "Assign the provided IP address"
            },
            "kernelArguments": {
              "type": "array",
              "default": [],
              "description": "Set additional kernel arguments"
            },
            "macAddress": {
              "type": "string",
              "default": "",
              "description": "Assign the provided MAC address"
            },
            "memory": {
              "type": "string",
              "default": "64M",
              "description": "Assign memory to the unikernel"
            },
            "name": {
              "type": "string",
              "default": "",
              "description": "Name of the instance"
            },
            "network": {
              "type": "string",
              "default": "",
              "description": "Attach instance to the provided network in the format <driver>:<network>"
            },
            "ports": {
              "type": "array",
              "default": [],
              "description": "Publish a machine's port(s) to the host"
            },
            "remove": {
              "type": "boolean",
              "default": false,
              "description": "Whether to automatically remove the unikernel when it shutsdown"
            },
            "as": {
              "type": "string",
              "default": "",
              "description": "Force a specific runner"
            },
            "volume": {
              "type": "string",
              "default": "",
              "description": "Bind a volume to the instance"
            },
            "symbolic": {
              "type": "boolean",
              "default": false,
              "description": "Whether to use the debuggable (symbolic) unikernel"
            }
          },
          "build": {
            "config": {
              "type": "string",
              "default": "",
              "description": "Override the path to the KConfig .config file"
            },
            "jobs": {
              "type": "integer",
              "default": 0,
              "description": "Allow N jobs at once"
            },
            "dbg": {
              "type": "boolean",
              "default": false,
              "description": "Build the debuggable (symbolic) kernel image instead of the stripped image"
            },
            "noCache": {
              "type": "boolean",
              "default": false,
              "description": "Force a rebuild even if existing intermediate artifacts already exist"
            },
            "noConfigure": {
              "type": "boolean",
              "default": false,
              "description": "Do not run Unikraft's configure step before building"
            },
            "noFast": {
              "type": "boolean",
              "default": false,
              "description": "Do not use maximum parallelization when performing the build"
            },
            "noFetch": {
              "type": "boolean",
              "default": false,
              "description": "Do not run Unikraft's fetch step before building"
            },
            "noPull": {
              "type": "boolean",
              "default": false,
              "description": "Do not pull packages before invoking Unikraft's build system"
            },
            "noUpdate": {
              "type": "boolean",
              "default": false,
              "description": "Do not update package index before running the build"
            },
            "buildLog": {
              "type": "string",
              "default": "",
              "description": "Use the specified file to save the output from the build"
            }
          },
          "initialize": {
            "library": {
              "noProvideMain": {
                "type": "boolean",
                "default": false,
                "description": "Do not provide provide main to the template"
              },
              "gitInit": {
                "type": "boolean",
                "default": true,
                "description": "Init git through the creating library"
              },
              "withPatchdir": {
                "type": "boolean",
                "default": false,
                "description": "provide patch directory to the template"
              }
            }
          },
          "deploy": {
            "config": {
              "type": "string",
              "default": "",
              "description": "Override the path to the KConfig .config file"
            },
            "jobs": {
              "type": "integer",
              "default": 0,
              "description": "Allow N jobs at once"
            },
            "dbg": {
              "type": "boolean",
              "default": false,
              "description": "Build the debuggable (symbolic) kernel image instead of the stripped image"
            },
            "noCache": {
              "type": "boolean",
              "default": false,
              "description": "Force a rebuild even if existing intermediate artifacts already exist"
            },
            "noConfigure": {
              "type": "boolean",
              "default": false,
              "description": "Do not run Unikraft's configure step before building"
            },
            "noFast": {
              "type": "boolean",
              "default": false,
              "description": "Do not use maximum parallelization when performing the build"
            },
            "noFetch": {
              "type": "boolean",
              "default": false,
              "description": "Do not run Unikraft's fetch step before building"
            },
            "forcePull": {
              "type": "boolean",
              "default": false,
              "description": "Force pull packages before invoking Unikraft's build system"
            },
            "noUpdate": {
              "type": "boolean",
              "default": false,
              "description": "Do not update package index before running the build"
            },
            "buildLog": {
              "type": "string",
              "default": "",
              "description": "Use the specified file to save the output from the build"
            },
            "envs": {
              "type": "array",
              "default": [],
              "description": "Set environment variables for the build"
            },
            "memory": {
              "type": "integer",
              "default": "64",
              "description": "Assign memory to the unikernel"
            },
            "name": {
              "type": "string",
              "default": "",
              "description": "Name of the instance"
            },
            "noStart": {
              "type": "boolean",
              "default": false,
              "description": "Do not start the unikernel after deploying"
            },
            "ports": {
              "type": "array",
              "default": [],
              "description": "Publish a machine's port(s) to the network"
            },
            "replicas": {
              "type": "integer",
              "default": 0,
              "description": "Number of replicas to deploy"
            },
            "rootfs": {
              "type": "string",
              "default": "",
              "description": "Use the specified rootfs for the unikernel"
            },
            "timeout": {
              "type": "integer",
              "default": 0,
              "description": "Set the timeout for the unikernel"
            },
            "runtime": {
              "type": "string",
              "default": "",
              "description": "Use the specified runtime for the unikernel"
            },
            "strategy": {
              "type": "string",
              "default": "",
              "description": "Set the deployment strategy"
            }
          }
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "package-explorer",
          "title": "Package Explorer",
          "icon": "media/unikraft-u.svg"
        }
      ]
    },
    "views": {
      "package-explorer": [
        {
          "id": "externalLibraries",
          "name": "External Libraries",
          "icon": "media/unikraft-u.svg",
          "contextualTitle": "Package Explorer"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "externalLibraries.addLibrary",
          "when": "view == externalLibraries",
          "group": "navigation"
        },
        {
          "command": "externalLibraries.refreshEntry",
          "when": "view == externalLibraries",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "externalLibraries.removeLibrary",
          "when": "view == externalLibraries && viewItem == library"
        },
        {
          "command": "externalLibraries.purgeLibrary",
          "when": "view == externalLibraries && viewItem == library"
        }
      ]
    },
    "commands": [
      {
        "command": "unikraft.initialize",
        "title": "Initialize project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.configure",
        "title": "Configure project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.build",
        "title": "Build project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.run",
        "title": "Run project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.update",
        "title": "Update",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.clean",
        "title": "Clean",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.deploy",
        "title": "Deploy",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.properclean",
        "title": "Properclean",
        "category": "Unikraft"
      },
      {
        "command": "externalLibraries.addLibrary",
        "title": "Add library",
        "icon": {
          "light": "resources/light/add.svg",
          "dark": "resources/dark/add.svg"
        }
      },
      {
        "command": "externalLibraries.removeLibrary",
        "title": "Remove library"
      },
      {
        "command": "externalLibraries.purgeLibrary",
        "title": "Purge library"
      },
      {
        "command": "externalLibraries.refreshEntry",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      }
    ]
  },
  "extensionPack": [
    "ms-vscode.cpptools",
    "ms-python.python"
  ],
  "scripts": {
    "test": "node ./out/test/runTest.js",
    "vscode:prepublish": "npm install && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/command-exists": "^1.2.3",
    "@types/js-yaml": "^4.0.9",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.10.6",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.17.0",
    "@typescript-eslint/parser": "^6.17.0",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.56.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "typescript": "^5.3.3",
    "winston": "^3.11.0"
  },
  "dependencies": {
    "command-exists": "^1.2.9",
    "js-yaml": "^4.1.0",
    "yaml": "^2.3.1"
  }
}